import './style.scss'
import {Statistic, TagLink} from '@/shared'
import {AudioPlayer, searchArticle} from '@/entities'
import {Blocks} from '@/assets/svg'

const ArticleBody = () => {
  return (
    <section className="article-body">
      <div className="article-body__tags">
        {searchArticle.tags.map((elem) => (
          <TagLink key={elem} text={elem} />
        ))}
      </div>

      <h2 className="title">Как собрать проект на Webpack</h2>
      <p className="article-body__author">Независимый специалист</p>

      <AudioPlayer />

      <div className="article-body__content">
        <p>
          Webpack — инструмент для сборки приложений JavaScript. Он объединяет
          все части программы в пакет и отправляет его в браузер. В статье
          подробнее расскажем, зачем нужен Webpack, чтобы вы смогли
          самостоятельно его установить и запустить.
        </p>

        <div className="article-body__blocks">
          <h2 className="article-body__subtitle" id="#part-1">
            Что такое Webpack
          </h2>

          <p>
            Мировое сообщество разработчиков стремится улучшить опыт
            пользователей и программистов в использовании и создании JavaScript
            приложений. Для этого было создано большое количество новых
            библиотек и фреймворков.
          </p>
          <p>
            Со временем также появились шаблоны проектирования, которые дали
            разработчикам более мощный и простой способ написания больших
            приложений на JavaScript. Но с их внедрением проекты становились все
            более громоздкими. К тому же новой тенденцией стало написание
            инкапсулированных небольших фрагментов кода. Все это привело к тому,
            что в общем пакете приложений стало в 4–5 раз больше файлов.
          </p>
          <p>
            Проблемой был не только общий размер приложения, но и огромный
            разрыв в том, какой код писали программисты и какой код могли
            распознать браузеры. Разработчикам пришлось использовать много
            вспомогательного кода, называемого polyfills, чтобы убедиться, что
            браузеры могут интерпретировать код в своих пакетах. Для решения
            этих проблем был создан Webpack. Он помогает объединять все части
            приложения и разом отправлять их в браузер. С помощью загрузчиков и
            плагинов Webpack может преобразовывать, сокращать и оптимизировать
            все типы файлов, прежде чем отправлять их в виде единого пакета. Он
            использует разные сервисы: JavaScript, HTML, CSS, шрифты, фото, а
            затем преобразует эти ресурсы в формат, удобный для использования в
            браузере.
          </p>
        </div>

        <div className="article-body__blocks">
          <h2 className="article-body__subtitle" id="#part-2">
            Зачем нужен Webpack
          </h2>

          <p>
            Webpack просматривает пакет и создаёт граф зависимостей. Последний
            состоит из различных модулей, которые требуются приложению для
            нормальной работы. Затем в зависимости от этого графика создаётся
            новый пакет, в который входит минимальное количество требуемых
            файлов.
          </p>

          <p>
            Есть четыре основных понятия, которые важны для понимания работы
            Webpack:
          </p>

          <p className="article-body__list">
            <span>— Вход;</span>
            <span>— Вывод;</span>
            <span>— Загрузчики;</span>
            <span>— Плагины.</span>
          </p>

          <p>
            Каждая настройка имеет одну или несколько точек входа. Они
            указывают, с чего начать построение графика зависимостей. Сервис
            обрабатывает модуль с первой точки и просматривает исходный код
            приложения в поисках других модулей, которые зависят от неё. Каждая
            прямая или косвенная зависимость фиксируется, обрабатывается и
            выводится в пакет:
          </p>

          <div className="article-body__code">
            <button className="article-body__copy-btn">
              <Blocks />
            </button>
            <span>css</span>
            <span>css</span>
          </div>

          <p>
            В настройках можно указать только одну точку вывода. Свойство output
            config указывает Webpack, где размещать создаваемые пакеты и как их
            называть. Указать свойство output можно в файле настройки.
          </p>
        </div>
      </div>

      <Statistic />
    </section>
  )
}

export default ArticleBody
